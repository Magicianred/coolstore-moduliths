using System;
using System.Collections;
using System.Collections.Generic;
using StrawberryShake;

namespace CoolStore.UI.Blazor
{
    [System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.0.0")]
    public class Queries
        : IDocument
    {
        private readonly byte[] _hashName = new byte[]
        {
            109,
            100,
            53,
            72,
            97,
            115,
            104
        };
        private readonly byte[] _hash = new byte[]
        {
            53,
            70,
            70,
            115,
            69,
            104,
            69,
            56,
            68,
            99,
            43,
            90,
            121,
            71,
            115,
            110,
            51,
            81,
            119,
            72,
            116,
            119,
            61,
            61
        };
        private readonly byte[] _content = new byte[]
        {
            113,
            117,
            101,
            114,
            121,
            32,
            103,
            101,
            116,
            80,
            114,
            111,
            100,
            117,
            99,
            116,
            115,
            40,
            36,
            99,
            117,
            114,
            114,
            101,
            110,
            116,
            80,
            97,
            103,
            101,
            58,
            32,
            73,
            110,
            116,
            33,
            44,
            32,
            36,
            104,
            105,
            103,
            104,
            80,
            114,
            105,
            99,
            101,
            58,
            32,
            70,
            108,
            111,
            97,
            116,
            33,
            41,
            32,
            123,
            32,
            112,
            114,
            111,
            100,
            117,
            99,
            116,
            115,
            40,
            99,
            117,
            114,
            114,
            101,
            110,
            116,
            80,
            97,
            103,
            101,
            58,
            32,
            36,
            99,
            117,
            114,
            114,
            101,
            110,
            116,
            80,
            97,
            103,
            101,
            44,
            32,
            104,
            105,
            103,
            104,
            80,
            114,
            105,
            99,
            101,
            58,
            32,
            36,
            104,
            105,
            103,
            104,
            80,
            114,
            105,
            99,
            101,
            41,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            105,
            100,
            32,
            110,
            97,
            109,
            101,
            32,
            99,
            97,
            116,
            101,
            103,
            111,
            114,
            121,
            78,
            97,
            109,
            101,
            32,
            105,
            110,
            118,
            101,
            110,
            116,
            111,
            114,
            121,
            76,
            111,
            99,
            97,
            116,
            105,
            111,
            110,
            32,
            112,
            114,
            105,
            99,
            101,
            32,
            105,
            109,
            97,
            103,
            101,
            85,
            114,
            108,
            32,
            100,
            101,
            115,
            99,
            114,
            105,
            112,
            116,
            105,
            111,
            110,
            32,
            125,
            32,
            125,
            32,
            113,
            117,
            101,
            114,
            121,
            32,
            103,
            101,
            116,
            73,
            110,
            118,
            101,
            110,
            116,
            111,
            114,
            105,
            101,
            115,
            32,
            123,
            32,
            105,
            110,
            118,
            101,
            110,
            116,
            111,
            114,
            105,
            101,
            115,
            32,
            123,
            32,
            95,
            95,
            116,
            121,
            112,
            101,
            110,
            97,
            109,
            101,
            32,
            105,
            100,
            32,
            108,
            111,
            99,
            97,
            116,
            105,
            111,
            110,
            32,
            119,
            101,
            98,
            115,
            105,
            116,
            101,
            32,
            100,
            101,
            115,
            99,
            114,
            105,
            112,
            116,
            105,
            111,
            110,
            32,
            125,
            32,
            125
        };

        public ReadOnlySpan<byte> HashName => _hashName;

        public ReadOnlySpan<byte> Hash => _hash;

        public ReadOnlySpan<byte> Content => _content;

        public static Queries Default { get; } = new Queries();

        public override string ToString() => 
            @"query getProducts($currentPage: Int!, $highPrice: Float!) {
              products(currentPage: $currentPage, highPrice: $highPrice) {
                id
                name
                categoryName
                inventoryLocation
                price
                imageUrl
                description
              }
            }
            
            query getInventories {
              inventories {
                id
                location
                website
                description
              }
            }";
    }
}
